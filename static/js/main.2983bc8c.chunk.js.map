{"version":3,"sources":["logo.svg","store/actions/TodoActions.js","components/TodoInput.js","components/TodoItem.js","store/actions/TodoStateActions.js","components/TodoFilter.js","components/TodoList.js","App.js","serviceWorker.js","store/reducers/EditTodoReducer.js","store/reducers/index.js","store/reducers/TodoReducer.js","index.js"],"names":["module","exports","TodoActions","TodoInput","value","todo","this","props","editingTodo","title","updateEditingTodo","e","preventDefault","console","log","id","updateTodo","addTodo","todos","className","style","marginBottom","onSubmit","submitForm","type","onClick","resetEditingTodo","placeholder","onChange","updateInputValue","target","Component","connect","state","todoReducer","editTodoReducer","dispatch","newTodo","length","editTodo","document","querySelector","scrollIntoView","behavior","toggleStatus","removeTodo","disabled","checked","status","textDecoration","TodoStateActions","filter","FilterReducer","applyFilter","role","aria-label","getFilteredTodos","map","index","key","toLowerCase","App","src","logo","alt","maxWidth","fontSize","fontWeight","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","rootReducer","combineReducers","action","toggledTodos","updatedTodos","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2983bc8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const TodoActions = {\n  ADD_TODO: 'ADD_TODO',\n  REMOVE_TODO: 'REMOVE_TODO',\n  TOGGLE_STATUS: 'TOGGLE_STATUS',\n  UPDATE_TODO: 'UPDATE_TODO',\n  EDIT_TODO: 'EDIT_TODO',\n  RESET_EDIT_TODO: 'RESET_EDIT_TODO',\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { TodoActions } from '../store/actions/TodoActions';\n\nclass TodoInput extends Component {\n  updateInputValue(value) {\n    const todo = this.props.editingTodo;\n    todo.title = value;\n    this.props.updateEditingTodo(todo);\n  }\n  submitForm(e) {\n    e.preventDefault();\n    console.log(this.props.editingTodo);\n    if (this.props.editingTodo.id >= 0) {\n      this.props.updateTodo(this.props.editingTodo);\n    } else {\n      this.props.addTodo(this.props.todos, this.props.editingTodo);\n    }\n  }\n  render() {\n    return (\n      <div className=\"container\" style={{ marginBottom: '2rem' }}>\n        <div className=\"row\">\n          <form className=\"col col-12\" onSubmit={(e) => this.submitForm(e)}>\n            <div className=\"input-group\">\n              {\n                this.props.editingTodo.id >= 0 ? (\n                  <div className=\"input-group-prepend\">\n                    <button className=\"btn btn-danger\" type=\"reset\" onClick={this.props.resetEditingTodo}>Cancel</button>\n                  </div>\n                ) : ''\n              }\n              <input type=\"text\" placeholder=\"Write your todo here..\" className=\"form-control\"\n                value={this.props.editingTodo.title}\n                onChange={(e) => this.updateInputValue(e.target.value)} />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-info\" type=\"submit\">Submit</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\nTodoInput.propTypes = {\n  updateTodo: PropTypes.func,\n  saveTodo: PropTypes.func,\n  editingTodo: PropTypes.object\n}\nconst mapStateToProps = (state) => ({\n  todos: state.todoReducer,\n  editingTodo: state.editTodoReducer\n})\nconst mapDispatchToProps = (dispatch) => ({\n  addTodo: (todos, newTodo) => {\n    if (newTodo.title.length === 0) {\n      return;\n    }\n    newTodo.id = todos.length;\n    dispatch({ type: TodoActions.ADD_TODO, todo: newTodo })\n    dispatch({ type: TodoActions.RESET_EDIT_TODO, todo: {} })\n  },\n  updateTodo: (todo) => {\n    dispatch({ type: TodoActions.UPDATE_TODO, todo })\n    dispatch({ type: TodoActions.RESET_EDIT_TODO, todo: {} })\n  },\n  updateEditingTodo: (todo) => {\n    dispatch({ type: TodoActions.EDIT_TODO, todo })\n  },\n  resetEditingTodo: () => {\n    dispatch({ type: TodoActions.RESET_EDIT_TODO })\n  }\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TodoActions } from '../store/actions/TodoActions';\n\nconst TodoItem = ({ todo, toggleStatus, removeTodo, editingTodo, editTodo }) => {\n  return (\n    <li className=\"list-group-item d-flex align-items-center justify-content-between\" disabled={editingTodo.id === todo.id}>\n\n      <div className=\"d-flex align-items-center justify-content-start\">\n        <label className=\"checkcontainer\">\n          <input className=\"form-check-input\" type=\"checkbox\" checked={todo.status}\n            onChange={() => toggleStatus(todo)} />\n          <span className=\"checkmark\"></span>\n        </label>\n        <label className=\"form-check-label\" title=\"Click to edit\"\n          style={{ textDecoration: todo.status ? 'line-through' : 'none' }}\n          onClick={() => editTodo(todo)}>{todo.title}</label>\n      </div>\n      <button className=\"btn btn-danger delete-btn\" onClick={() => removeTodo(todo)}>&times;</button>\n    </li>\n  )\n}\nTodoItem.propTypes = {\n  todo: PropTypes.object\n}\nconst mapStateToProps = (state) => ({\n  editingTodo: state.editTodoReducer\n});\nconst mapDispatchToProps = (dispatch) => ({\n  editTodo(todo) {\n    dispatch({ type: TodoActions.EDIT_TODO, todo });\n    document.querySelector('.form-control').scrollIntoView({ behavior: 'smooth' });\n  }\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","export const TodoStateActions = {\n  COMPLETED: 'COMPLETED',\n  IN_PROGRESS: 'IN PROGRESS',\n  ALL: ''\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { TodoStateActions } from '../store/actions/TodoStateActions';\n\nconst TodoFilter = ({ filter, applyFilter }) => {\n  return (\n    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n      <button type=\"button\" className={`btn ${filter === '' ? 'btn-info' : 'btn-outline-secondary'}`}\n        onClick={() => applyFilter(TodoStateActions.ALL)}>All</button>\n      <button type=\"button\" className={`btn ${filter === TodoStateActions.COMPLETED ? 'btn-info' : 'btn-outline-secondary'}`}\n        onClick={() => applyFilter(TodoStateActions.COMPLETED)}>Completed</button>\n      <button type=\"button\" className={`btn ${filter === TodoStateActions.IN_PROGRESS ? 'btn-info' : 'btn-outline-secondary'}`}\n        onClick={() => applyFilter(TodoStateActions.IN_PROGRESS)}>In Progress</button>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => ({\n  filter: state.FilterReducer\n})\nconst mapDispatchToProps = (dispatch) => ({\n  applyFilter(type) {\n    dispatch({ type, filter: type })\n  }\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFilter)","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport TodoItem from './TodoItem';\nimport { PropTypes } from 'prop-types';\nimport { TodoActions } from '../store/actions/TodoActions';\nimport { TodoStateActions } from '../store/actions/TodoStateActions';\nimport TodoFilter from './TodoFilter';\n\nconst TodoList = ({ todos, filter, removeTodo, toggleStatus, editTodo }) => (\n  <div className=\"w-100 pl-3 pr-3\">\n    <div className=\"d-flex align-items-center justify-content-between mb-3\">\n      <h4 className=\"list-group-header m-0\">Todo List</h4>\n      <TodoFilter />\n    </div>\n    <ul className=\"list-group\">\n      {\n        todos.length > 0 ?\n          todos.map((todo, index) => (\n            <TodoItem todo={todo} key={index} toggleStatus={toggleStatus} removeTodo={removeTodo}\n              editTodo={editTodo} />\n          )) :\n          (<li className=\"list-group-item\">No {filter.toLowerCase()} todos yet.</li>)\n      }\n    </ul>\n    {\n      todos.length > 0 ? (\n        <p className=\"mt-3\"><small><em>* Click on the todo item to edit that</em></small></p>\n      ) : ''\n    }\n\n  </div>\n)\n\nconst getFilteredTodos = (todos, filter) => {\n  switch (filter) {\n    case TodoStateActions.COMPLETED:\n      return todos.filter(todo => todo.status === true)\n    case TodoStateActions.IN_PROGRESS:\n      return todos.filter(todo => todo.status !== true)\n    default: return todos;\n  }\n}\nconst mapStateToProps = (state) => ({\n  todos: getFilteredTodos(state.todoReducer, state.FilterReducer),\n  filter: state.FilterReducer\n});\nconst mapDispatchToProps = (dispatch) => ({\n  toggleStatus: (todo) => {\n    dispatch({ type: TodoActions.TOGGLE_STATUS, todo: todo })\n  },\n  removeTodo: (todo) => {\n    dispatch({ type: TodoActions.REMOVE_TODO, todo: todo })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nTodoList.propTypes = {\n  todos: PropTypes.array\n}","import React, { Component } from 'react';\nimport './App.scss';\nimport TodoInput from './components/TodoInput';\nimport logo from './logo.svg';\nimport TodoList from './components/TodoList';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container App\">\n        <div className=\"text-center logo\">\n          <img src={logo} alt=\"logo\" style={{ maxWidth: '4rem' }} />\n          <span style={{ fontSize: '1.5rem', fontWeight: 'bold' }}>Todo App</span>\n        </div>\n        <TodoInput />\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { TodoActions } from \"../actions/TodoActions\";\n\nconst editTodo = {\n  id: -1,\n  title: '',\n  status: false\n}\n\nexport const editTodoReducer = (editingTodo = editTodo, action) => {\n  switch (action.type) {\n    case TodoActions.EDIT_TODO:\n      return { ...action.todo }\n    case TodoActions.RESET_EDIT_TODO:\n      return {\n        id: -1,\n        title: '',\n        status: false\n      }\n    default: return { ...editingTodo };\n  }\n}","import { combineReducers } from \"redux\";\nimport { todoReducer, FilterReducer } from './TodoReducer';\nimport { editTodoReducer } from './EditTodoReducer';\n\nexport const rootReducer = combineReducers({ todoReducer, editTodoReducer, FilterReducer });","import { TodoActions } from \"../actions/TodoActions\";\nimport { TodoStateActions } from \"../actions/TodoStateActions\";\n\nexport const todoReducer = (todos = [], action) => {\n  switch (action.type) {\n    case TodoActions.ADD_TODO:\n      return [...todos, action.todo];\n    case TodoActions.REMOVE_TODO:\n      return todos.filter(todo => todo.id !== action.todo.id);\n    case TodoActions.TOGGLE_STATUS:\n      const toggledTodos = todos.map(todo => {\n        if (todo.id === action.todo.id) {\n          todo.status = !todo.status;\n        }\n        return todo;\n      });\n      return toggledTodos;\n    case TodoActions.UPDATE_TODO:\n      const updatedTodos = todos.filter(todo => {\n        if (todo.id === action.todo.id) {\n          todo.title = action.todo.title;\n        }\n        return todo;\n      });\n      return updatedTodos;\n    default:\n      return [...todos];\n  }\n}\nexport const FilterReducer = (filter = '', action) => {\n  switch (action.type) {\n    case TodoStateActions.COMPLETED:\n    case TodoStateActions.IN_PROGRESS:\n    case TodoStateActions.ALL:\n      return action.filter;\n    default: return filter;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { rootReducer } from './store/reducers';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}